# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateDatabaseInput {
  parent: Parent!
  properties: JSON!
  title: [RichText!]!
}

type CreateUser {
  id: String!
  object: String!
}

input CreateUserInput {
  """Integrating Secret"""
  secretKey: String!

  """User Name"""
  userName: String!
}

type Database {
  archived: Boolean!
  cover: JSONObject
  created_by: JSONObject!
  created_time: String!
  description: [NormalText!]!
  icon: JSONObject

  """db id with hyphen"""
  id: String!
  is_inline: Boolean!
  last_edited_by: JSONObject
  last_edited_time: String!
  object: String!
  parent: JSONObject!
  properties: JSONObject!
  title: [NormalText!]!
  url: String!
}

type DatabaseResponse {
  object: String!
  results: [Database!]!
}

type DatabaseUser {
  archived: Boolean
  cover: JSONObject
  created_by: JSONObject
  created_time: String
  icon: JSONObject
  id: String!
  last_edited_by: JSONObject
  last_edited_time: String
  object: String!
  parent: JSONObject
  properties: JSONObject
  url: String
}

type DatabaseUsers {
  has_more: Boolean!
  next_cursor: String
  object: String!
  results: [DatabaseUser!]!
  type: String!
  user: JSONObject
}

input Filter {
  property: String!
  value: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  createUser(createUserInput: CreateUserInput!): CreateUser!

  """
  Create one database, more detail in https://developers.notion.com/reference/create-a-database
  """
  create_database(createDatabaseInput: CreateDatabaseInput!): Database!

  """
  It changes database column, more info at https://developers.notion.com/reference/update-a-database
  """
  update_database(updateDatabaseInput: UpdateDatabaseInput!): Database!
}

type NormalText {
  annotations: JSONObject
  href: String
  plain_text: String!
  text: JSONObject
  type: String!
}

type Page {
  archived: Boolean!
  cover: JSONObject
  created_by: JSONObject
  created_time: String!
  icon: JSONObject
  id: String!
  last_edited_by: JSONObject
  last_edited_time: String!
  object: String!
  parent: JSONObject
  properties: JSONObject
  url: String!
}

type Pages {
  has_more: Boolean!
  next_cursor: JSONObject
  object: String!
  results: [Page!]!
  type: String!
}

input Parent {
  page_id: String!
  type: String!
}

type Query {
  """List all databases are added to integration"""
  databases: DatabaseResponse!
  getUserById(id: String!): DatabaseUser!

  """Get data of one db"""
  one_database(id: String!): DatabaseResponse!
  pageById(id: String!): Page!
  pages: Pages!

  """Get context of one database like title, cover, header name, etc..."""
  retrieve_database(id: String!): Database!

  """Search databases and pages"""
  search(searchInput: SearchInput!): SearchResponse!
  users: DatabaseUsers!
}

input RichText {
  text: Text!
  type: String
}

input SearchInput {
  filter: Filter
  query: String!
  sort: Sort
}

type SearchResponse {
  object: String!
  results: [SearchResult!]!
}

type SearchResult {
  archived: Boolean!
  cover: JSONObject
  created_by: JSONObject!
  created_time: String!
  description: [NormalText!]
  icon: JSONObject

  """db id with hyphen"""
  id: String!
  is_inline: Boolean!
  last_edited_by: JSONObject
  last_edited_time: String!
  object: String!
  parent: JSONObject!
  properties: JSONObject!
  title: [NormalText!]
  url: String!
}

input Sort {
  direction: String!
  timestamp: String!
}

input Text {
  content: String!
  link: String
}

input UpdateDatabaseInput {
  description: [RichText!]
  id: String!
  properties: JSON!
  title: [RichText!]!
}